&НаКлиенте
Перем ИдентификаторКомпоненты, ВнешняяКомпонента;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	МакетКомпоненты = ОбработкаОбъект.ПолучитьМакет("TesseractOCR1C");
	МестоположениеКомпоненты = ПоместитьВоВременноеХранилище(МакетКомпоненты, УникальныйИдентификатор);
	
	AddInURL = Неопределено;
	Если Параметры.Свойство("AddInURL", AddInURL) Тогда
		Файл = Новый Файл(AddInURL);
		Если Файл.Существует() Тогда
			МестоположениеКомпоненты = AddInURL;
		КонецЕсли;
	КонецЕсли;
	
	Языки = "eng+rus";
	Файл = Новый Файл(ОбработкаОбъект.ИспользуемоеИмяФайла);
	ИсходнаяПапка = Файл.Путь + "tessdata";
	ИсходныйФайл = Файл.Путь + "testfile.png";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ИдентификаторКомпоненты = "_" + СтрЗаменить(Новый УникальныйИдентификатор, "-", "");
	ВыполнитьПодключениеВнешнейКомпоненты(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Автотест(Команда)
	
	ПараметрыФормы = Новый Структура("Автотестирование,ИдентификаторКомпоненты", Автотестирование, ИдентификаторКомпоненты);
	ПозицияРазделителя = СтрНайти(ИмяФормы, ".", НаправлениеПоиска.СКонца);
	НовоеИмя = Лев(ИмяФормы, ПозицияРазделителя) + "RunTests";
	ОткрытьФорму(НовоеИмя, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПодключениеВнешнейКомпоненты(ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодключениеВнешнейКомпонентыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	НачатьПодключениеВнешнейКомпоненты(ОписаниеОповещения, МестоположениеКомпоненты, ИдентификаторКомпоненты, ТипВнешнейКомпоненты.Native);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключениеВнешнейКомпонентыЗавершение(Подключение, ДополнительныеПараметры) Экспорт
	
	Если Подключение Тогда
		ВнешняяКомпонента = Новый("AddIn." + ИдентификаторКомпоненты + ".TesseractOCR");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПолученаВерсияКомпоненты", ЭтотОбъект);
		ВнешняяКомпонента.НачатьПолучениеВерсия(ОписаниеОповещения);
	ИначеЕсли ДополнительныеПараметры = Истина Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьПодключениеВнешнейКомпоненты", ЭтотОбъект, Ложь);
		НачатьУстановкуВнешнейКомпоненты(ОписаниеОповещения, МестоположениеКомпоненты);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученаВерсияКомпоненты(Значение, ДополнительныеПараметры) Экспорт
	
	Заголовок = "Распознавание текста, версия " + Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораФайла", ЭтаФорма);
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр = "Файл картинки (*.png)|*.png";
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		ИсходныйФайл = ВыбранныеФайлы[0];
		ПрочитатьФайл(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СканироватьПапку(Команда)

	ВнешняяКомпонента.НачатьВызовСканироватьПапку(Новый ОписаниеОповещения, ИсходнаяПапка, ИсходнаяПапка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПапкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораПапки", ЭтаФорма);
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораПапки(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы <> Неопределено Тогда
		ИсходнаяПапка = ВыбранныеФайлы[0];
		СканироватьПапку(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьЯзыковыеФайлы(Команда)

	ВнешняяКомпонента.НачатьВызовИнициализировать(Новый ОписаниеОповещения, ИсходнаяПапка, Языки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайл(Команда)

	ДанныеКартинки = Новый ДвоичныеДанные(ИсходныйФайл);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПолученРезультатЧтения", ЭтаФорма);
  	ВнешняяКомпонента.НачатьВызовРаспознать(ОписаниеОповещения, ДанныеКартинки, CR, CG, CB);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученРезультатЧтения(РезультатВызова, ПараметрыВызова, ДополнительныеПараметры) Экспорт
	
	ТекстJSON = РезультатВызова;
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ТекстJSON);
	ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Авто, "  ");
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписи);
	ЗаписатьJSON(ЗаписьJSON, ДанныеJSON);
	ТекстJSON = ЗаписьJSON.Закрыть();
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаТекст;

КонецПроцедуры

&НаКлиенте
Процедура Обесцветить(Команда)
	
	ДанныеКартинки = Новый ДвоичныеДанные(ИсходныйФайл);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПолученаКартинка", ЭтаФорма);
  	ВнешняяКомпонента.НачатьВызовОбесцветить(ОписаниеОповещения, ДанныеКартинки, CR, CG, CB);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученаКартинка(РезультатВызова, ПараметрыВызова, ДополнительныеПараметры) Экспорт
	
	АдресКартинки = ПоместитьВоВременноеХранилище(РезультатВызова, УникальныйИдентификатор);
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаКартинка;
	
КонецПроцедуры
